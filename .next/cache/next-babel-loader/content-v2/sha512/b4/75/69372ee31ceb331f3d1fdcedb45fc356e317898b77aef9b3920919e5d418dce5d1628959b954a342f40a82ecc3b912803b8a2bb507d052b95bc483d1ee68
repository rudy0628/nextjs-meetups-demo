{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\react-course\\\\23-nextjs-introduction\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport MeetupDetails from '../../components/meetups/MeetupDetails';\n\nvar MeetupDetailsPage = function MeetupDetailsPage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, _this);\n};\n\n_c = MeetupDetailsPage;\nexport var __N_SSG = true;\nexport default MeetupDetailsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetailsPage\");","map":{"version":3,"sources":["C:/Users/User/Desktop/react-course/23-nextjs-introduction/pages/[meetupId]/index.js"],"names":["MeetupDetails","MeetupDetailsPage","props","meetupData","image","title","address","description"],"mappings":";;;;;AAAA,OAAOA,aAAP,MAA0B,wCAA1B;;AAGA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,KAAK,EAAI;AAClC,sBACC,QAAC,aAAD;AACC,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KADzB;AAEC,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAFzB;AAGC,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH3B;AAIC,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJ/B;AAAA;AAAA;AAAA;AAAA,WADD;AAQA,CATD;;KAAMN,iB;;AAsDN,eAAeA,iBAAf","sourcesContent":["import MeetupDetails from '../../components/meetups/MeetupDetails';\r\nimport { MongoClient, ObjectId } from 'mongodb';\r\n\r\nconst MeetupDetailsPage = props => {\r\n\treturn (\r\n\t\t<MeetupDetails\r\n\t\t\timage={props.meetupData.image}\r\n\t\t\ttitle={props.meetupData.title}\r\n\t\t\taddress={props.meetupData.address}\r\n\t\t\tdescription={props.meetupData.description}\r\n\t\t/>\r\n\t);\r\n};\r\nexport const getStaticPaths = async () => {\r\n\tconst client = await MongoClient.connect(\r\n\t\t'mongodb+srv://rudu:B2Q0zzLvhzyqFuv5@cluster0.pjcia.mongodb.net/meetups?retryWrites=true&w=majority'\r\n\t);\r\n\tconst db = client.db();\r\n\tconst meetupsCollection = db.collection('meetups');\r\n\r\n\t// fetch all meetups, but only contains _id key.\r\n\tconst meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tfallback: false,\r\n\t\tpaths: meetups.map(meetup => ({\r\n\t\t\tparams: { meetupId: meetup._id.toString() },\r\n\t\t})),\r\n\t};\r\n};\r\n\r\n// we don't change meetup data multiple request in one second\r\nexport const getStaticProps = async context => {\r\n\t// context also can get current path params\r\n\tconst meetupId = context.params.meetupId;\r\n\r\n\tconst client = await MongoClient.connect(\r\n\t\t'mongodb+srv://rudu:B2Q0zzLvhzyqFuv5@cluster0.pjcia.mongodb.net/meetups?retryWrites=true&w=majority'\r\n\t);\r\n\tconst db = client.db();\r\n\tconst meetupsCollection = db.collection('meetups');\r\n\r\n\tconst selectedMeetup = await meetupsCollection.findOne({\r\n\t\t_id: ObjectId(meetupId),\r\n\t});\r\n\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetupData: selectedMeetup,\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport default MeetupDetailsPage;\r\n"]},"metadata":{},"sourceType":"module"}