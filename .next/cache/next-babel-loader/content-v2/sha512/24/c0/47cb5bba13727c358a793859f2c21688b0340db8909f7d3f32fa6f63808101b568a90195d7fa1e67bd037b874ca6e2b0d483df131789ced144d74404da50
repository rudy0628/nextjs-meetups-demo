{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\react-course\\\\23-nextjs-introduction\\\\pages\\\\index.js\";\nimport { MongoClient } from 'mongodb';\nimport { meetupsDb } from '../helper/meetupsdb';\nimport MeetupList from '../components/meetups/MeetupList';\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}; // // execute every incoming request\n// export const getServerSideProps = async context => {\n// \tconst req = context.req;\n// \tconst res = context.res;\n// \t// fetch data from API\n// \t// every code in here runs on server side\n// \treturn {\n// \t\tprops: {\n// \t\t\tmeetups: DUMMY_MEETUPS,\n// \t\t},\n// \t};\n// };\n//only work on page folder components\n//call this function before calling components function\n\n\nexport const getStaticProps = async () => {\n  // just fetch data here, cause this not run on client\n  const client = await MongoClient.connect('mongodb+srv://rudu:B2Q0zzLvhzyqFuv5@cluster0.pjcia.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups'); //find all meetups\n\n  const meetups = await meetupsCollection.find().toArray();\n  client.close(); // this meetups will setup in component props(Homepage props)\n\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        image: meetup.image,\n        address: meetup.address,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 10\n  };\n};\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/User/Desktop/react-course/23-nextjs-introduction/pages/index.js"],"names":["MongoClient","meetupsDb","MeetupList","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","title","image","address","id","_id","toString","revalidate"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACzB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAFD,C,CAIA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AACA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACzC;AACA,QAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CACpB,oGADoB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B,CAPyC,CASzC;;AACA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP,GAZyC,CAczC;;AACA,SAAO;AACNV,IAAAA,KAAK,EAAE;AACNC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAYC,MAAM,KAAK;AAC/BC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADiB;AAE/BC,QAAAA,KAAK,EAAEF,MAAM,CAACE,KAFiB;AAG/BC,QAAAA,OAAO,EAAEH,MAAM,CAACG,OAHe;AAI/BC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJ2B,OAAL,CAAlB;AADH,KADD;AASNC,IAAAA,UAAU,EAAE;AATN,GAAP;AAWA,CA1BM;AA4BP,eAAepB,QAAf","sourcesContent":["import { MongoClient } from 'mongodb';\r\nimport { meetupsDb } from '../helper/meetupsdb';\r\n\r\nimport MeetupList from '../components/meetups/MeetupList';\r\n\r\nconst HomePage = props => {\r\n\treturn <MeetupList meetups={props.meetups} />;\r\n};\r\n\r\n// // execute every incoming request\r\n// export const getServerSideProps = async context => {\r\n// \tconst req = context.req;\r\n// \tconst res = context.res;\r\n\r\n// \t// fetch data from API\r\n\r\n// \t// every code in here runs on server side\r\n\r\n// \treturn {\r\n// \t\tprops: {\r\n// \t\t\tmeetups: DUMMY_MEETUPS,\r\n// \t\t},\r\n// \t};\r\n// };\r\n\r\n//only work on page folder components\r\n//call this function before calling components function\r\nexport const getStaticProps = async () => {\r\n\t// just fetch data here, cause this not run on client\r\n\tconst client = await MongoClient.connect(\r\n\t\t'mongodb+srv://rudu:B2Q0zzLvhzyqFuv5@cluster0.pjcia.mongodb.net/meetups?retryWrites=true&w=majority'\r\n\t);\r\n\tconst db = client.db();\r\n\r\n\tconst meetupsCollection = db.collection('meetups');\r\n\r\n\t//find all meetups\r\n\tconst meetups = await meetupsCollection.find().toArray();\r\n\r\n\tclient.close();\r\n\r\n\t// this meetups will setup in component props(Homepage props)\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetups: meetups.map(meetup => ({\r\n\t\t\t\ttitle: meetup.title,\r\n\t\t\t\timage: meetup.image,\r\n\t\t\t\taddress: meetup.address,\r\n\t\t\t\tid: meetup._id.toString(),\r\n\t\t\t})),\r\n\t\t},\r\n\t\trevalidate: 10,\r\n\t};\r\n};\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}